From: Chris Ruehl <chris.ruehl@xxxxxxxxxxxx>
Date: Wed, 28 Jan 2015 19:02:31 +0100
Subject: [PATCH] net: dm9000: Read GPR, modify and write

The GPR register should be read, modified and write to
activate the PHY. A simple write 0 to the GPR might override
other register values with needs to keep.
Some codestyle fixes (mostly leading spaces)

Signed-off-by: Chris Ruehl <chris.ruehl@xxxxxxxxxxxx>
---
 drivers/net/ethernet/davicom/dm9000.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/davicom/dm9000.c b/drivers/net/ethernet/davicom/dm9000.c
index cf140445ba40..08c19af4a098 100644
--- a/drivers/net/ethernet/davicom/dm9000.c
+++ b/drivers/net/ethernet/davicom/dm9000.c
@@ -1302,6 +1302,7 @@ dm9000_open(struct net_device *dev)
 {
 	board_info_t *db = netdev_priv(dev);
 	unsigned long irqflags = db->irq_res->flags & IRQF_TRIGGER_MASK;
+	int gprval;
 
 	if (netif_msg_ifup(db))
 		dev_dbg(db->dev, "enabling %s\n", dev->name);
@@ -1317,9 +1318,15 @@ dm9000_open(struct net_device *dev)
 
 	irqflags |= IRQF_SHARED;
 
+	gprval = ior(db, DM9000_GPR);
+
 	/* GPIO0 on pre-activate PHY, Reg 1F is not set by reset */
-	iow(db, DM9000_GPR, 0);	/* REG_1F bit0 activate phyxcer */
-	mdelay(1); /* delay needs by DM9000B */
+	if (gprval & (1 << 0)) {
+		dev_dbg(db->dev, "Activate PHY GPR: 0x%x\n", gprval);
+		gprval = gprval & ~(1 << 0);
+		iow(db, DM9000_GPR, gprval);    /* REG_1F bit0 activate phyxcer */
+		mdelay(1); /* delay needed by DM9000B */
+	}
 
 	/* Initialize DM9000 board */
 	dm9000_init_dm9000(dev);
